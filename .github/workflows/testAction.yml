name: Integration

on: 
  issues:
    types: [opened]

jobs:
  checkDir:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.files }}
    steps:
      - uses: actions/checkout@v4

      - id: set-matrix
        name: 'count files'
        run: | 
          num=$(ls ./templates/${{ github.event.issue.title }} | wc -l | xargs)
          echo $num
          count=$(( num-1 ))
          echo $count
          data=()
          for (( i=1; i<=${count}; i++ ))
          do 
            data+=("${{ github.event.issue.title }}-template-${i}")
          done
          echo ${data[@]}
          json=$(printf '%s\n' "${data[@]}" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "$json"
          echo "files=$json" >> $GITHUB_OUTPUT

  workflow:
    needs: checkDir
    strategy:
      max-parallel: 1
      matrix:
        item: ${{ fromJson(needs.checkDir.outputs.matrix) }} 
    uses: ./.github/workflows/create_vnet.yml
    with:
      # params:  ${{ github.event.issue.body }}
      templateFile: "./templates/${{ github.event.issue.title }}/${{ matrix.item }}.bicep"
      parameterFile: "./templates/${{ github.event.issue.title }}/${{ github.event.issue.title }}-parameters.json"
      subId: "42172145-a813-4382-ba2a-ccd469d6d439"
      rgroup: "rg-${{ github.event.issue.title }}"

    secrets: inherit

  
  build:
    needs:
      - workflow
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v4

      - name: 'inital test'
        run: | 
          echo "issue title: ${{ github.event.issue.title }}"
          echo "issue body: ${{ github.event.issue.body }}" 
          for value in "${{ github.event.issue.body }}";do echo $value;done
          echo "issue number: ${{ github.event.issue.number }}"
          echo "issue labels: ${{ toJson(github.event.issue.labels) }}"

      - name: 'login az cli'
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: 'Run a cli command'
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Azure PowerShell script
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          inlineScript: |
            Get-AzContext